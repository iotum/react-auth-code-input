{"version":3,"file":"index.modern.js","sources":["../src/index.tsx"],"sourcesContent":["import React, {\n  useRef,\n  useEffect,\n  useImperativeHandle,\n  forwardRef\n} from 'react';\n\nconst allowedCharactersValues = ['alpha', 'numeric', 'alphanumeric'] as const;\n\nexport type AuthCodeProps = {\n  allowedCharacters?: typeof allowedCharactersValues[number];\n  ariaLabel?: string;\n  autoFocus?: boolean;\n  containerClassName?: string;\n  disabled?: boolean;\n  inputClassName?: string;\n  isPassword?: boolean;\n  length?: number;\n  placeholder?: string;\n  onChange: (res: string, completed: boolean) => void;\n};\n\ntype InputMode = 'text' | 'numeric';\n\ntype InputType = 'text' | 'tel' | 'password';\n\ntype InputProps = {\n  type: InputType;\n  inputMode: InputMode;\n  pattern: string;\n  min?: string;\n  max?: string;\n};\n\nexport type AuthCodeRef = {\n  focus: () => void;\n  clear: () => void;\n};\n\nconst propsMap: { [key: string]: InputProps } = {\n  alpha: {\n    type: 'text',\n    inputMode: 'text',\n    pattern: '[a-zA-Z]{1}'\n  },\n\n  alphanumeric: {\n    type: 'text',\n    inputMode: 'text',\n    pattern: '[a-zA-Z0-9]{1}'\n  },\n\n  numeric: {\n    type: 'tel',\n    inputMode: 'numeric',\n    pattern: '[0-9]{1}',\n    min: '0',\n    max: '9'\n  }\n};\n\nconst AuthCode = forwardRef<AuthCodeRef, AuthCodeProps>(\n  (\n    {\n      allowedCharacters = 'alphanumeric',\n      ariaLabel,\n      autoFocus = true,\n      containerClassName,\n      disabled,\n      inputClassName,\n      isPassword = false,\n      length = 6,\n      placeholder,\n      onChange\n    },\n    ref\n  ) => {\n    if (isNaN(length) || length < 1) {\n      throw new Error('Length should be a number and greater than 0');\n    }\n\n    if (!allowedCharactersValues.some((value) => value === allowedCharacters)) {\n      throw new Error(\n        'Invalid value for allowedCharacters. Use alpha, numeric, or alphanumeric'\n      );\n    }\n\n    const inputsRef = useRef<Array<HTMLInputElement>>([]);\n    const inputProps = propsMap[allowedCharacters];\n\n    useImperativeHandle(ref, () => ({\n      focus: () => {\n        if (inputsRef.current) {\n          inputsRef.current[0].focus();\n        }\n      },\n      clear: () => {\n        if (inputsRef.current) {\n          for (let i = 0; i < inputsRef.current.length; i++) {\n            inputsRef.current[i].value = '';\n          }\n          inputsRef.current[0].focus();\n        }\n        sendResult(false);\n      }\n    }));\n\n    useEffect(() => {\n      if (autoFocus) {\n        inputsRef.current[0].focus();\n      }\n    }, []);\n\n    const sendResult = (maybeCompleted: boolean) => {\n      const res = inputsRef.current.map((input) => input.value).join('');\n      onChange && onChange(res, maybeCompleted && res.length === length);\n    };\n\n    const handleOnChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n      const {\n        target: { value, nextElementSibling }\n      } = e;\n      if (value.length > 1) {\n        e.target.value = value.charAt(0);\n        if (nextElementSibling !== null) {\n          (nextElementSibling as HTMLInputElement).focus();\n        }\n      } else {\n        if (value.match(inputProps.pattern)) {\n          if (nextElementSibling !== null) {\n            (nextElementSibling as HTMLInputElement).focus();\n          }\n        } else {\n          e.target.value = '';\n        }\n      }\n      sendResult(e.target === inputsRef.current[length - 1]);\n    };\n\n    const handleOnKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n      const { key } = e;\n      const target = e.target as HTMLInputElement;\n      if (key === 'Backspace') {\n        if (target.value === '') {\n          if (target.previousElementSibling !== null) {\n            const t = target.previousElementSibling as HTMLInputElement;\n            t.value = '';\n            t.focus();\n            e.preventDefault();\n          }\n        } else {\n          target.value = '';\n        }\n        sendResult(false);\n      }\n    };\n\n    const handleOnFocus = (e: React.FocusEvent<HTMLInputElement>) => {\n      e.target.select();\n    };\n\n    const handleOnPaste = (e: React.ClipboardEvent<HTMLInputElement>) => {\n      const pastedValue = e.clipboardData.getData('Text');\n\n      let currentInput = 0;\n\n      for (let i = 0; i < pastedValue.length; i++) {\n        const pastedCharacter = pastedValue.charAt(i);\n        const currentValue = inputsRef.current[currentInput].value;\n        if (pastedCharacter.match(inputProps.pattern)) {\n          if (!currentValue) {\n            inputsRef.current[currentInput].value = pastedCharacter;\n            if (inputsRef.current[currentInput].nextElementSibling === null) {\n              break;\n            }\n            (inputsRef.current[currentInput]\n              .nextElementSibling as HTMLInputElement).focus();\n            currentInput++;\n          }\n        }\n      }\n      sendResult(true);\n\n      e.preventDefault();\n    };\n\n    const inputs = [];\n    for (let i = 0; i < length; i++) {\n      inputs.push(\n        <input\n          key={i}\n          onChange={handleOnChange}\n          onKeyDown={handleOnKeyDown}\n          onFocus={handleOnFocus}\n          onPaste={handleOnPaste}\n          {...inputProps}\n          type={isPassword ? 'password' : inputProps.type}\n          ref={(el: HTMLInputElement) => {\n            inputsRef.current[i] = el;\n          }}\n          maxLength={1}\n          className={inputClassName}\n          autoComplete={i === 0 ? 'one-time-code' : 'off'}\n          aria-label={\n            ariaLabel\n              ? `${ariaLabel}. Character ${i + 1}.`\n              : `Character ${i + 1}.`\n          }\n          disabled={disabled}\n          placeholder={placeholder}\n        />\n      );\n    }\n\n    return <div className={containerClassName}>{inputs}</div>;\n  }\n);\n\nexport default AuthCode;\n"],"names":["allowedCharactersValues","propsMap","alpha","type","inputMode","pattern","alphanumeric","numeric","min","max","AuthCode","forwardRef","ref","allowedCharacters","ariaLabel","autoFocus","containerClassName","disabled","inputClassName","isPassword","length","placeholder","onChange","isNaN","Error","some","value","inputsRef","useRef","inputProps","useImperativeHandle","focus","current","clear","i","sendResult","useEffect","maybeCompleted","res","map","input","join","handleOnChange","e","target","nextElementSibling","charAt","match","handleOnKeyDown","key","previousElementSibling","t","preventDefault","handleOnFocus","select","handleOnPaste","pastedValue","clipboardData","getData","currentInput","pastedCharacter","currentValue","inputs","push","React","onKeyDown","onFocus","onPaste","el","maxLength","className","autoComplete"],"mappings":"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"}